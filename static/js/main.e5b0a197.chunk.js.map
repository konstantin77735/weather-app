{"version":3,"sources":["components/Card/Card.js","components/WeekContainer/WeekContainer.js","App.js","index.js"],"names":["Card","ms","this","props","day","dt","weekdayName","Date","toLocaleString","weekday","imgURL","weather","id","className","Math","round","main","temp","description","React","Component","weatherURL","WeekContainer","state","days","componentDidMount","fetch","then","res","json","data","dailyData","list","filter","reading","dt_txt","includes","setState","formatCards","map","index","key","App","ReactDOM","render","document","getElementById"],"mappings":"gOA8BeA,G,mLAvBX,IAAMC,EAAyB,IAApBC,KAAKC,MAAMC,IAAIC,GACpBC,EAAc,IAAIC,KAAKN,GAAIO,eAAe,KAAM,CAACC,QAAS,SAE1DC,EAAS,WAAYR,KAAKC,MAAMC,IAAIO,QAAQ,GAAGC,GAAI,qBAKzD,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,cAAcP,GAC5B,uBAAGO,UAAWH,IACd,4BAAKI,KAAKC,MAAMb,KAAKC,MAAMC,IAAIY,KAAKC,MAApC,UACA,yBAAKJ,UAAU,aACb,4BAAQA,UAAU,kCAAkCX,KAAKC,MAAMC,IAAIO,QAAQ,GAAGO,oB,GAnBvEC,IAAMC,YCAnBC,EAAa,uHAmCJC,E,4MAhCbC,MAAQ,CACNC,KAAM,I,EAGRC,kBAAoB,WAClBC,MAAML,GACLM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAYD,EAAKE,KAAKC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,OAAOC,SAAS,eACtE,EAAKC,SAAS,CAACb,KAAMO,Q,EAIzBO,YAAc,WACZ,OAAO,EAAKf,MAAMC,KAAKe,KAAI,SAACnC,EAAKoC,GAAN,OAAgB,kBAAC,EAAD,CAAMpC,IAAKA,EAAKqC,IAAKD,Q,uDAIhE,OACE,yBAAK3B,UAAU,IACf,wBAAIA,UAAU,uBAAd,2HACA,wBAAIA,UAAU,wBAAd,SACE,yBAAKA,UAAU,8BAEZX,KAAKoC,oB,GAzBYnB,IAAMC,WCSnBsB,E,uKARX,OACE,yBAAK7B,UAAU,OACb,kBAAE,EAAF,W,GAJUO,aCAlBuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e5b0a197.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n  // Props: day, key(index)\r\n\r\n  render() {    \r\n    const ms = this.props.day.dt * 1000;\r\n    const weekdayName = new Date(ms).toLocaleString('ru', {weekday: 'long'});\r\n\r\n    const imgURL = \"owf owf-\"+ this.props.day.weather[0].id +\" owf-5x icon-style\"\r\n\r\n    // const farenheit = (parseInt(this.props.day.main.temp) - 273.15) * (9/5) + 32\r\n\r\n\r\n    return (\r\n      <div className=\"col-auto\">\r\n        <div className=\"card bg-light\">\r\n          <h3 className=\"card-title\">{weekdayName}</h3>\r\n          <i className={imgURL}></i>\r\n          <h2>{Math.round(this.props.day.main.temp)} °C</h2>\r\n          <div className=\"card-body\">\r\n            <button className=\"btn btn-dark btn-outline-light\">{this.props.day.weather[0].description}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nconst weatherURL = \"https://api.openweathermap.org/data/2.5/forecast?q=Vladikavkaz&lang=ru&units=metric&APPID=a9a3a62789de80865407c0452e9d1c27\";\r\n\r\nclass WeekContainer extends React.Component {\r\n  state = {\r\n    days: []\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(weatherURL)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"12:00:00\"))\r\n      this.setState({days: dailyData})\r\n    })\r\n  }\r\n\r\n  formatCards = () => {\r\n    return this.state.days.map((day, index) => <Card day={day} key={index}/>)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n      <h1 className=\"display-4 jumbotron\">Прогноз погоды на 5 дней</h1>\r\n      <h5 className=\"display-4 text-muted\">Сочи</h5>\r\n        <div className=\"row justify-content-center\">\r\n\r\n          {this.formatCards()}\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeekContainer\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport WeekContainer from './components/WeekContainer/WeekContainer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        < WeekContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}